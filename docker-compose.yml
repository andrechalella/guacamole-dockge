####################################################################################
# docker-compose file for Apache Guacamole
# created by PCFreak 2017-06-28
# forked by andrechalella 2025-06-23 in version 0.62
#
# Changes by andrechalella:
# - Make docker-compose.yml truly standalone for immediate deployment by
#   pasting the contents in Dockge's text-editor UI.
# - To this end, I implemented Apache's suggested DB initialization strategy
#    (shared volume with the packaged schema files).
# - Remove Nginx.

# HOW TO USE
#
# This docker-compose.yml file is made to be standalone, i.e there is no preparation
# needed. Simply paste these contents into Dockge's "compose.yaml" UI, or drop this
# file into a subdirectory and run "docker compose up", and everything should
# download and start, with proper initialization the first time.

# ACCESSING GUACAMOLE WEB INTERFACE
#
# By default, this docker-compose.yml file does not expose/publish ports. The
# containers are connected solely to the "guacamole-network" Docker network.
#
# If you want to access Guacamole UI directly, normally you can find the Guacamole
# container's IP with `docker inspect <container>`. See "Guacamole URL" note below.
#
# If you want other containers (e.g Nginx Proxy Manager) to access Guacamole via its
# container hostname (Docker DNS), remember to add your Docker custom network to the
# "networks" section of the "guacamole" service (also to the "networks" top-level element).
#
# Guacamole URL:
# - Guacamole is accessible via the 8080 TCP port (Apache Tomcat HTTP server)
# - Guacamole's URL path is "/guacamole/"
# - So for instance `curl http://<container-ip>:8080/guacamole/`

# Dockge's parser/serializer mangles our file a little bit:
#   - it will replace fragment names with generic strings like 'a1'
#   - it will remove blank lines
#   - it will write 'null' after the top-level volume keys
#   - it will change our command formats

x-pg-env-pg: &pg-env-pg
  POSTGRES_DB: ${POSTGRES_DB:-guacamole_db}
  POSTGRES_USER: ${POSTGRES_USER:-guacamole_user}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-guacpass}

x-pg-env-guacamole: &pg-env-guacamole
  POSTGRESQL_DATABASE: ${POSTGRES_DB:-guacamole_db}
  POSTGRESQL_USERNAME: ${POSTGRES_USER:-guacamole_user}
  POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD:-guacpass}

services:
  guacd:
    image: guacamole/guacd
    networks:
      - guacamole-network
    restart: unless-stopped
    # Custom health-check is needed until the below PR gets merged,
    # otherwise guacd takes 5 minutes to show as healthy
    # https://github.com/apache/guacamole-server/pull/577
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "4822"]
      interval: 5m
      timeout: 5s
      start_period: 15s

  db:
    image: postgres:17
    environment: *pg-env-pg
    volumes:
      - guacamole_db_data:/var/lib/postgresql/data
      - shared_pg_initdb:/docker-entrypoint-initdb.d:ro
    networks:
      - guacamole-network
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  guacamole:
    image: guacamole/guacamole
    volumes:
      - shared_pg_initdb:/opt/guacamole/extensions/guacamole-auth-jdbc/postgresql/schema:ro
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRESQL_HOSTNAME: db
      <<: *pg-env-guacamole
    networks:
      - guacamole-network
    depends_on:
      db:
        condition: service_healthy
      guacd:
        condition: service_healthy
    restart: unless-stopped

volumes:
  shared_pg_initdb:
  guacamole_db_data:

networks:
  guacamole-network:
    driver: bridge
